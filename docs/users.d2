AccountData: {
  shape: class

	bio: String
	bio_links: Vec<String>
	current_avatar_image_url: Url
	current_avatar_tags: Vec<serde_json::Value>
	current_avatar_thumbnail_image_url: Url
	developer_type: DeveloperType
	display_name: String
	id: id::User
	is_friend: bool
	last_platform: PlatformType
	profile_pic_override: Option<Url>
	status_description: String
	tags: Vec<String>
	user_icon: Option<Url>
	status: UserStatus
}

StatusData: {
	shape: class

	state: UserState
	last_activity: OffsetDateTime
}

FriendData: {
  shape: class

  friend_key: String
  last_login: OffsetDateTime
  #traveling_to_location: OfflineOrPrivateOr<String>
	location: id::OfflineOrPrivateOr<String>
}

Friend: {
  shape: class

	#fallback_avatar: id::Avatar
	image_url: Url
}
Friend -> AccountData
Friend -> FriendData

PastDisplayName: {
  shape: class

  display_name: String
  updated_at: OffsetDateTime
  reverted: Option<bool>
}

CurrentAccountData: {
  shape: class

	accepted_privacy_version: u8
  accepted_tos_version: u8
	current_avatar_asset_url: Url
	email_verified: bool
	friend_group_names: Vec<serde_json::Value>
	account_deletion_date: serde_json::Value
	account_deletion_log: serde_json::Value
	friends: Vec<id::User>
	has_birthday: bool
	has_email: bool
	has_logged_in_from_client: bool
	has_pending_email: bool
	home_location: Option<id::World>
	obfuscated_email: String
	obfuscated_pending_email: String
	oculus_id: String
	past_display_names: Vec<PastDisplayName>
	status_first_time: bool
	status_history: Vec<String>
	steam_details: serde_json::Value
	steam_id: String
	google_id: String
	oculus_id: String
	pico_id: String
	vive_id: String
	two_factor_auth_enabled: bool
	two_factor_auth_enabled_date: Option<OffsetDateTime>
	unsubscribe: bool
	username: String
}
CurrentAccountData -- PastDisplayName: "past_display_names" {
	source-arrowhead.label: 1
	target-arrowhead.label: *
}

Presence: {
  shape: class

  avatar_thumbnail: Option<Url>
	current_avatar_tags: Vec<serde_json::Value>
  display_name: String
  groups: Vec<serde_json::Value>
  id: id::User
  instance: id::OfflineOr<id::Instance>
  instance_type: String
	is_rejoining: serde_json::Value
  platform: PlatformType
  profile_pic_override: Option<Url>
  status: UserStatus
	traveling_to_instance: id::OfflineOrPrivateOr<id::Instance>
	traveling_to_world: id::OfflineOrPrivateOr<id::World>
  user_icon: Option<Url>
	world: id::OfflineOr<String>
}

CurrentAccount: {
  shape: class

  presence: Presence
	active_friends: Vec<id::User>
  offline_friends: Vec<id::User>
	online_friends: Vec<id::User>
	last_login: OffsetDateTime
	updated_at: OffsetDateTime
	current_avatar: String
	fallback_avatar: id::Avatar
}
CurrentAccount -> AccountData
CurrentAccount -> CurrentAccountData
CurrentAccount -> StatusData
CurrentAccount -- Presence: "presence" {
	source-arrowhead.label: 1
	target-arrowhead.label: 1
}


endpoint_friends: Friends endpoint
endpoint_friends.shape: cloud
endpoint_friends -> Friend {
	source-arrowhead.label: 1
	target-arrowhead.label: *
}

endpoint_current_user: Current user endpoint
endpoint_current_user.shape: cloud
endpoint_current_user -- CurrentAccount {
	source-arrowhead.label: 1
	target-arrowhead.label: 1
}

User: {
  shape: class
  
  allow_avatar_copying: bool
  date_joined: Date
  friend_request_status: FriendRequestStatus
	note: String
}
User -> AccountData

UserStatusData: {
  shape: class

	traveling_to_instance: OfflineOrPrivateOr<id::Instance>
	traveling_to_world: OfflineOrPrivateOr<id::World>
	location: OfflineOrPrivateOr<id::Instance>
	instance_id: OfflineOr<id::Instance>
	world_id: OfflineOr<id::World>
}
UserStatusData -> StatusData

FriendUser: {
  shape: class

}
FriendUser -> User
FriendUser -> FriendData
FriendUser -> UserStatusData

CurrentUser: {
  shape: class

	fallback_avatar: id::Avatar
}
CurrentUser -> User
CurrentUser -> FriendData
CurrentUser -> CurrentAccountData
CurrentUser -> UserStatusData

endpoint_users: Users endpoint
endpoint_users.shape: cloud
endpoint_users -- User {
	source-arrowhead.label: 1
	target-arrowhead.label: *
}
endpoint_users -- FriendUser {
	source-arrowhead.label: 1
	target-arrowhead.label: *
}
endpoint_users -- CurrentUser {
	source-arrowhead.label: 1
	target-arrowhead.label: *
}
